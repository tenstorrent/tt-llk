BasedOnStyle: Google
ColumnLimit: 120
IndentWidth: 4

# This will make access modifiers (public/protected/private) sit on the same indentation as `class` keyword
AccessModifierOffset: -4

# Arguments, parameters and construction initializer are broken as following:
# - Try to fit everything into single line (controlled by ColumnLimit).
# - If it doesn't fit, break immediately after open bracket (in case of arguments and parameters)
#   or after colon in case of constructor initializers.
# - Try to fit everything else into the second line.
# - If it doesn't fit in second line, then each argument, parameter or initializer will sit in its own line.
AlignAfterOpenBracket: AlwaysBreak
AlignConsecutiveAssignments: true
AlignConsecutiveBitFields: true
AlignConsecutiveDeclarations: true
AlignTrailingComments: true
AlignEscapedNewlines: Left
AlignOperands: true
BinPackArguments: false
BinPackParameters: false

# When constructor initializers exist in the constructor definition, leave the colon as last thing on the original
# line instead of putting it on the next line.
BreakConstructorInitializers: AfterColon

# Pointer and reference alignment
DerivePointerAlignment: true
PointerAlignment: Left
ReferenceAlignment: Left

# Disallow single statements after if/else/for/while/do without curly braces.
InsertBraces: true
BreakBeforeBraces: Attach

# Separate definition blocks, including classes, structs, enums, and functions.
SeparateDefinitionBlocks: Always
SpaceBeforeCpp11BracedList: true
SpacesBeforeTrailingComments: 1
SpacesInAngles: Never
AllowShortLoopsOnASingleLine: true
AllowShortBlocksOnASingleLine: true
AllowShortEnumsOnASingleLine: false
RemoveSemicolon: true
SortUsingDeclarations: LexicographicNumeric
