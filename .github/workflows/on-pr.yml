name: 🛠️ PR Pipeline
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  # Use github.run_id on main branch (or any protected branch)
  # This ensures that no runs get cancelled on main.
  # Use github.event.pull_request.number on pull requests, so it's unique per pull request
  # and will cancel obsolete runs.
  # Use github.ref on other branches, so it's unique per branch.
  group: ${{ github.workflow }}-${{ github.ref_protected && github.run_id ||
    github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  pre-commit:
    name: "🔍 Pre-commit checks"
    uses: ./.github/workflows/pre-commit.yml

  build-images:
    name: "🐳️ Build images"
    runs-on: ubuntu-latest
    needs: pre-commit
    timeout-minutes: 30
    outputs:
      docker-image: ${{ steps.build.outputs.docker-image }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker images and output the image name
        id: build
        shell: bash
        run: |
          # Output the image name
          set pipefail
          .github/scripts/build-docker-images.sh | tee docker.log
          DOCKER_CI_IMAGE=$(tail -n 1 docker.log)
          echo "DOCKER_CI_IMAGE $DOCKER_CI_IMAGE"
          echo "docker-image=$DOCKER_CI_IMAGE" >> "$GITHUB_OUTPUT"

  setup-and-test-wormhole:
    name: "🧪 Perform checks (Wormhole)"
    uses: ./.github/workflows/setup-and-test.yml
    needs: build-images
    with:
      chip_arch: wormhole
      docker_image: ${{ needs.build-images.outputs.docker-image }}
      runs_on: tt-beta-ubuntu-2204-n150-large-stable

  check-all-green:
    name: "✅ Check all green"
    if: always()
    needs:
      - pre-commit
      - build-images
      - setup-and-test-wormhole
    runs-on: ubuntu-latest
    steps:
      - name: Check if the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
