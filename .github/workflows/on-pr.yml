name: üõ†Ô∏è PR Pipeline
on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, labeled]
    branches: ["main"]

concurrency:
  # Use github.run_id on main branch (or any protected branch)
  # This ensures that no runs get cancelled on main.
  # Use github.event.pull_request.number on pull requests, so it's unique per pull request
  # and will cancel obsolete runs.
  # Use github.ref on other branches, so it's unique per branch.
  group: ${{ github.workflow }}-${{ github.ref_protected && github.run_id ||
    github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  gh-comment:
    if: github.event_name == 'pull_request'
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      -name: Comment on PR if no labels and comment not already posted
    run: |
      PR_NUMBER=${{ github.event.pull_request.number }}
      REPO=${{ github.repository }}
      echo "Checking labels on PR #$PR_NUMBER..."
      LABEL_COUNT=$(gh pr view "$PR_NUMBER" --repo "$REPO" --json labels --jq '.labels | length')
      if [ "$LABEL_COUNT" -gt 0 ]; then
        echo "Labels already present ‚Äî skipping comment."
        exit 0
      fi
      echo "Checking if reminder comment is already posted..."
      gh pr view "$PR_NUMBER" --repo "$REPO" --json comments --jq '.comments[].body' \
        | grep -Fq "Please set one of the following labels"
      if [ $? -eq 0 ]; then
        echo "Reminder already posted ‚Äî skipping comment."
        exit 0
      fi
      echo "Posting comment to PR..."
      gh pr comment "$PR_NUMBER" --repo "$REPO" --body \
      "Please set one of the following labels to control integration testing:
        - \`run-integration-tests\`
      This ensures the correct testing workflow is triggered."

  # Pre-commit checks
  pre-commit:
    name: "üîç Static checks"
    uses: ./.github/workflows/pre-commit.yml

  build-images:
    name: "üê≥Ô∏è Docker setup"
    uses: ./.github/workflows/build-images.yml
    needs: pre-commit
    secrets: inherit

  setup-and-test-wormhole:
    name: "üß™ Perform checks (Wormhole)"
    uses: ./.github/workflows/setup-and-test.yml
    needs: build-images
    with:
      chip_arch: wormhole
      docker_image: ${{ needs.build-images.outputs.docker-image }}
      runs_on: tt-beta-ubuntu-2204-n150-large-stable

  test-tt-metal:
    name: "üß© tt-metal integration (Wormhole)"
    needs: setup-and-test-wormhole
    uses: ./.github/workflows/tt-metal-integration-tests.yml
    secrets: inherit
    with:
      branch_name: ${{ github.head_ref }}
      runs_on: tt-beta-ubuntu-2204-n150-large-stable

  check-all-green:
    name: "‚úÖ Check all green"
    if: always()
    needs:
      - pre-commit
      - build-images
      - setup-and-test-wormhole
    runs-on: ubuntu-latest
    steps:
      - name: Check if the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
