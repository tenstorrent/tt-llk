name: "‚öôÔ∏è Setup and Test"

on:
  workflow_call:
    inputs:
      docker_image:
        description: "The Docker image to use for the container"
        required: true
        type: string
      runs_on:
        description: "The runner to use for the job"
        required: true
        type: string
      test_group:
        description: "Array of test groups. Pass the array as a JSON string (e.g., '[1, 2, 3, 4, 5]')"
        required: true
        type: string

permissions:
  contents: write

jobs:
  setup-and-test:
    runs-on: ${{ inputs.runs_on }}
    timeout-minutes: 80
    strategy:
      fail-fast: false
      matrix:
        test_group: ${{ fromJSON(inputs.test_group) }}
    container:
      image: ${{ inputs.runs_on != 'P150' && 'harbor.ci.tenstorrent.net/' || '' }}${{ inputs.docker_image }}
      options: "--rm --device /dev/tenstorrent"
    name: "ü¶Ñ Run tests (group ${{ matrix.test_group }}${{ fromJSON(inputs.test_group).length }})"
    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Install SFPI
      - name: Install SFPI
        shell: bash
        run: |
          cd tests
          ./setup_testing_env.sh
          cd ..

      # Step 3: Run the tests
      - name: Run tests
        shell: bash
        env:
          TEST_GROUPS: ${{ inputs.test_group }}
        run: |
          # Parse the JSON string into an array to get its length
          SPLITS=$(echo "$TEST_GROUPS" | jq '. | length')
          cd tests/python_tests/
          pytest --splits $SPLITS --group ${{ matrix.test_group }} \
                --override-ini="addopts=-v" --timeout=60 \
                --junitxml=pytest-report-${{ matrix.test_group }}.xml .

      # Step 4: Upload the JUnit XML report
      - name: Upload JUnit XML report
        uses: actions/upload-artifact@v4
        with:
          name: junit-report-${{ matrix.test_group }}
          path: tests/python_tests/pytest-report-${{ matrix.test_group }}.xml

      # Step 5: Publish the test results
      - name: Publish Test Results
        uses: mikepenz/action-junit-report@v5
        with:
          report_paths: tests/python_tests/pytest-report-${{ matrix.test_group }}.xml
